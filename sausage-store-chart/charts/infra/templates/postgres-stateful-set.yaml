---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-postgres
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app.kubernetes.io/component: {{ .Chart.Name }}
    app.kubernetes.io/part-of: {{ .Release.Name }}
spec:
  replicas: {{ .Values.postgres.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-postgres
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-postgres
    spec:
      containers:
        - name: postgres
          image: {{ .Values.postgres.image }}
          imagePullPolicy: {{ .Values.global.imagePullPolicy }}
          ports:
            - containerPort: {{ .Values.postgres.containerPort }}
          envFrom:
            - secretRef:
                name: {{ .Release.Name }}-postgres-secret
            - configMapRef:
                name: {{ .Release.Name }}-postgres-config-map
          resources:
            requests:
              memory: {{ .Values.postgres.resources.requests.memory }}
              cpu: {{ .Values.postgres.resources.requests.cpu }}
            limits:
              memory: {{ .Values.postgres.resources.limits.memory }}
              cpu: {{ .Values.postgres.resources.limits.cpu }}
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
    - metadata:
        name: postgres-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.postgres.storage.size }}
        storageClassName: {{ .Values.postgres.storage.className }}
