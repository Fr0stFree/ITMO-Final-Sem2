global:
  imagePullPolicy: Always

frontend:
  replicas: 1
  revisionHistoryLimit: 15
  strategy:
    type: Recreate
  service:
    port: 80
  ingress:
    host: front-frostfree.2sem.students-projects.ru
    path: /
    pathType: Prefix
    secretName: 2sem-students-projects-wildcard-secret
  containerPort: 80
  image: frostfree/sausage-frontend:latest
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "250m"
  nginxConf: nginx.conf

backend:
  annotations:
    path: /actuator/prometheus
    port: "8080"
    scrape: "true"
  env:
    postgresUri: jdbc:postgresql://sausage-store-postgres-service:5432/sausage-store
    postgresUser: store
    postgresPassword: storepassword
    reportPath: /logs/reports
    logPath: /logs
  service:
    port: 8080
  revisionHistoryLimit: 15
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  image: frostfree/sausage-backend:latest
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "250m"
  containerPort: 8080
  livenessProbe:
    httpGet:
      path: /actuator/health
      port: 8080
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  # TODO: Опишите VPA для бэкенда
  vpa:
    enabled: false

backend-report:
  replicas: 1
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "250m"
  image: frostfree/sausage-backend-report:latest
  service:
    port: 8081
  imagePullPolicy: Always
  containerPort: 8081
  revisionHistoryLimit: 15
  strategy:
    type: Recreate
  env:
    dbUri: mongodb://store:storepassword@sausage-store-mongodb-service:27017/sausage-store
  hpa:
    enabled: false
  livenessProbe:
    httpGet:
      path: /api/v1/health
      port: 8081
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    # TODO: Опишите HPA для бэкенда

infra:
  postgres:
    image: postgres:15-alpine
    env:
      dbName: sausage-store
      dbUser: store
      dbPassword: storepassword
    containerPort: 5432
    replicas: 1
    resources:
      requests:
        memory: "128Mi"
        cpu: "100m"
      limits:
        memory: "256Mi"
        cpu: "500m"
    storage:
      size: 1Gi

  mongodb:
    image: mongo:7.0
    replicas: 1
    storage:
      size: 1Gi
    resources:
      requests:
        memory: "128Mi"
        cpu: "100m"
      limits:
        memory: "256Mi"
        cpu: "500m"
    env:
      dbHost: sausage-store-mongodb-service
      dbPort: 27017
      dbName: sausage-store
      dbUser: store
      dbPassword: storepassword
      dbRootUsername: root
      dbRootPassword: rootpassword
    containerPort: 27017
